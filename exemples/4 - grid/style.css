/* ------ BOILERPLATE ------ */

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    padding: 40px;
}

.box {
    border: 1px solid black;
    text-align: center;
    background-color: #e6e6e6;
}

.box:hover {
    background-color: #aaaaaa;
}

.grid {
    margin: 20px 0;
}

/* ------ GRID LAYOUT ------ */

/* Example 1 */

#example1 {
    display: grid; /* Don't forget this... */

    /* The parent build the grid template. */
    grid-template-columns: 1fr 2fr 1fr; /* 1col, 2cols, 1cols */
    grid-template-rows: 1fr 1fr 1fr 1fr; /* 1col, 1col, 1col, 1col */
}

#example1 > .b1 {
    /* The children specify which columns and rows they use. */
    grid-column: 1; /* Column, from 1 to 4 in this case (because of the template defined by the parent) */
    grid-row: 1; /* Row, from 1 to 4 in this case */
    background-color: red;
}

#example1 > .b3 {
    /* Same thing */
    grid-column: 2;
    grid-row: 2;
    background-color: aqua;
}

/* Example 2 */

#example2 {
    display: grid;

    /* You can use shortcuts to build templates */
    grid-template-columns: repeat(3, 1fr); /* 1col, 1col, 1col */

    /* Automatically define the number of rows ! */
    /* I want rows with a minimal size of 100px and a automatic maximum size */
    grid-auto-rows: minmax(100px, auto);

    /* You can define a spacing between the cells of the grid. */
    gap: 10px;
}

#example2 > .b1 {
    /* A child can use multiple cells of the grid. */
    /* In this case the columns [1,3). The last index is exclusive, thus we have 2 columns in this case (1 and 2) */
    grid-column: 1 / 3;
    grid-row: 1;
}

#example2 > .b2 {
    grid-column: 3;
    grid-row: 1 / 3; /* Rows 1 and 2 */
}

#example2 > .b3 {
    grid-column: 1 / 3; /* Columns 1 and 2 */
    grid-row: 2 / 4; /* Rows 2 and 3 */
}

#example2 > .b4 {
    grid-column: 3;
    grid-row: 3;
}
